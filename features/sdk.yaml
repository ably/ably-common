%YAML 1.2
---
Agent Identifier:
  .specification: RSC7d
  .synopsis: |
    Sends an `Ably-Agent` HTTP header for REST and Realtime Websocket connections,
    identifying the library version,
    as well as relevant information describing any underlying layers and the client platform.
  Operating System:
    .synopsis: |
      Includes a product component indicating the runtime OS type and version.
  Runtime:
    .synopsis: |
      Includes a product component indicating the type of runtime, as discrete from the OS type.
      This does not always include a version (e.g. for `browser` runtime emitted by `ably-js`
      and the `uwp` runtime emitted by `ably-dotnet`).
Client Instance Creation:
  .specification: RSC1
  .synopsis: |
    An SDK announcing support for any of these construction inputs must support those
    inputs for all client types it offers.
  With Client Options:
  With String:
    .specification: RSC1a
    .synopsis: |
      Where that string is treated as an API key if it includes a ':' (colon) delimiter,
      otherwise it is treated as a token string.
Options:
  .synopsis: |
    `ClientOptions` that apply to both client types (REST and Realtime).
  Agents:
    .specification: RSC7d6
    .synopsis: |
      `agents`:
      For use only by other Ably-authored SDKs, on a need-to-have basis.
  Authentication:
    .synopsis: |
      `AuthOptions`
    Callback:
      .specification: [RSA4a, RSA4, TO3j5, AO2b]
      .synopsis: |
        `authCallback`:
        Service `Auth#requestToken` calls by invoking a callback (`authCallback`).
    Key:
      .specification: [RSA11, TO3j1, AO2a]
      .synopsis: |
        `key`:
        Authenticate using a full Ably key string, as obtained from the dashboard,
        featuring a key name and key secret.
    Query Time:
      .specification: [TO3j10, RSA9d, RSA10k, AO2g]
      .synopsis: |
        `queryTime`:
        Query the Ably system for the current time when making token requests.
    Token Details:
      .specification: [RSA4a, RSA4, TO3j3]
      .synopsis: |
        `tokenDetails`
    Token Request:
      .specification: [TO3j2]
      .synopsis: |
        `token`
    Token String:
      .specification: [RSA4a, RSA4, TO3j2]
      .synopsis: |
        `token`
    URL:
      .specification:
        [RSA8c, TO3j6, TO3j7, TO3j8, TO3j9, AO2c, AO2d, AO2e, AO2f, RSA4]
      .synopsis: |
        `authUrl`, `authMethod`, `authHeaders` and `authParams`:
        Service `Auth#requestToken` calls by querying a provided URL (`authURL`) to obtain a token request,
        or the token itself. Supports specification of other HTTP request properties (method, headers and params).
    Use Token Authentication:
      .specification: [RSA4, RSA14, TO3j4]
      .synopsis: |
        `useTokenAuth`:
        Specifies that Token Auth, not Basic Auth, must be used.
  Binary Protocol:
    .specification: [RSC8b, TO3f]
    .synopsis: |
      `useBinaryProtocol`:
      Use JSON protocol for REST and Realtime operations, overriding the default MessagePack binary protocol.
      MessagePack is the default for runtime environments that have a suitable level of support
      for binary data.
  Client Identifier:
    .specification: [RSC17, RSA7, RSA15, RTN2d, TO3a]
    .synopsis: |
      `clientId`:
      The id of the client represented by the client instance create using these options.
  Default Token Parameters:
    .specification: [TO3j11, RSA7a4]
    .synopsis: |
      `defaultTokenParams`:
      Overrides client library defaults for `TokenParams`.
  Environment:
    .specification: [RSC11b, RSC15g, RTC1e, RTN17a, TO3k1]
    .synopsis: |
      `environment`:
      Override environment for REST and Realtime connections, for example to `sandbox`.
      For development environments only.
  Fallback Hosts:
    .specification: [RSC15b2, RSC15g, RTN17b2, TO3k6]
    .synopsis: |
      `fallbackHosts`:
      Override the default fallback hosts, for REST and Realtime connections.
      Defaults are autogenerated from `environment` so this option should not be needed for
      anything other than development environments.
  HTTP Connection Open Timeout:
    .specification: TO3l3
    .synopsis: |
      `httpOpenTimeout`
  Log Handling:
    .specification: [TO3b, TO3c]
    .synopsis: |
      `logLevel` and `logHandler`:
      What level of log messages to generate and where to send them.
      Typically a handler/sink and a verbosity level, but some logging systems may express
      this differently for idiomatic reasons that make sense for the language, framework
      or runtime platform.
  Maximum Frame Size:
    .specification: [TO3l9, CD2d]
    .synopsis: |
      `maxFrameSize`:
      Override the default for the maximum size of a single REST POST body or Realtime Websocket frame.
  Maximum Message Size:
    .specification: [TO3l8, RSL1i, RTL6d1, CD2c]
    .synopsis: |
      `maxMessageSize`:
      The maximum size of messages that may be published in one go.
  Plugins:
    .specification: [PC1, PC2, TO3o]
    .synopsis: |
      `plugins`:
      Defines a mechanism that SDKs may use to allow users to specify optional functionality
      at runtime.
  Port:
    .specification: [TO3k4, RSC15b1, RTN17b1]
    .synopsis: |
      `port`:
      Overrides the TCP port to be used for insecure connections, where TLS has been disabled,
      for development environments only.
  Proxy:
    .synopsis: |
      `proxy`:
      Support for specify an HTTP proxy server to use for making REST and Realtime connections through.
      Typically includes options for `host`, `port`, `username`, `password` and HTTP authentication type.
      May also include option to specify host names that are not to be proxied.
  TLS Port:
    .specification: [TO3k5, RSC15b1, RTN17b1]
    .synopsis: |
      `tlsPort`:
      Overrides the TCP port to be used for secure connections, for development environments only.
  Transport Layer Security:
    .specification: [TO3d, RSC18]
    .synopsis: |
      `tls`:
      Disable TLS, for development environments only.
Push Notifications:
  Activation:
    .specification: [RSH2, RSH3, RSH4, RSH5, RSH6, RSH7, RSH8]
    .synopsis: |
      Only available on platforms that support receiving push notifications.
  Administration:
    .documentation: https://ably.com/docs/rest/push#push-admin
    .specification: RSH1
    Channel Subscription:
      .specification: RSH1c
      List:
        .specification: RSH1c1
        .synopsis: |
          List channel subscriptions.
          Get a list of push notification subscriptions to channels,
          using REST API `/push/channelSubscriptions` (`GET`).
      List Channels:
        .specification: RSH1c2
        .synopsis: |
          List all channels with at least one subscribed device,
          using REST API `/push/channels` (`GET`).
      Remove:
        .specification: [RSH1c4, RSH1c5]
        .synopsis: |
          Unsubscribe from push notifications for channels.
          Submit a request to stop receiving push notifications when push messages are published on the specified channels,
          using REST API `/push/channelSubscriptions` (`DELETE`).
      Save:
        .specification: RSH1c3
        .synopsis: |
          Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel,
          using REST API `/push/channelSubscriptions` (`POST`).
    Device Registration:
      .specification: RSH1b
      Get:
        .specification: RSH1b1
        .synopsis: |
          Get details from a registered device.
          Obtain the details for a device registered for receiving push registrations,
          using REST API `/push/deviceRegistrations/<deviceId>` (`GET`).
      List:
        .specification: RSH1b2
        .synopsis: |
          List registered devices.
          Obtain the details for devices registered for receiving push registrations,
          using REST API `/push/deviceRegistrations` (`GET`).
      Remove:
        .specification: [RSH1b4, RSH1b5]
        .synopsis: |
          Unregister one or more devices for push notifications,
          using REST API `/push/deviceRegistrations` (`DELETE`).
          For a single device the REST API endpoint is suffixed `/<deviceId>` (`remove`).
          Alternatively query parameters are used to find a device or devices
          by `clientId` (`removeWhere`).
      Save:
        .specification: RSH1b3
        .synopsis: |
          Update a device registration, as an upsert,
          using REST API `/push/deviceRegistrations/<deviceId>` (`PUT`).
    Publish:
      .documentation:
        - https://ably.com/docs/rest/push#publish
        - https://ably.com/docs/rest-api#push-publish
        - https://ably.com/docs/general/push/publish#direct-publishing
      .specification: RSH1a
      .synopsis: |
        Deliver a push notification to devices, addressing recipient(s):
        - registered to Ably by device ID
        - by their associated client ID
        - directly using the underlying notifications service (FCM, APNs, etc.), thus bypassing registrations to Ably altogether
Realtime:
  .synopsis: |
    Additional functionality offered by Ably client instances that offer Realtime connectivity.

  Channel:
    Attach:
      .specification: [RTL4, RTL5]
      .synopsis: |
        Methods to attach and detach channels.
    Presence:
      Enter:
        .specification: [RTP8, RTP10]
        .synopsis: |
          Methods to enter and leave presence on channels for this client.
        Client:
          .synopsis: |
            Methods to enter and leave presence for a given `clientId`,
            not necessarily the id for this client.
      Get:
        .specification: RTP11
        .synopsis: |
          Obtain a list of the current members of the channel, as a callback.
          Optional parameters include `waitForSync` (defaults to `true`), `clientId` and `connectionId`.
      History:
        .specification: RTP12
      Subscribe:
        .specification: [RTP6, RTP7]
        .synopsis: |
          Methods to subscribe and unsubscribe for presence events on channels for this client.
      Update:
        .specification: RTP9
        Client:
          .synopsis: |
            Method to update presence data and/or extras for a `clientId`,
            not necessarily the id for this client.
    Publish:
      .specification: RTL6
    Subscribe:
      .specification: [RTL7, RTL8]
      Deltas:
        .specification: [RTL18, RTL19, RTL20, PC3, TM2i]
        .synopsis: |
          Support for VCDiff-encoded delta streams.
          SDKs may choose to offer this only if a plugin is supplied via client options
          (optional functionality).

  # TODO (DF1a) connectionStateTtl [ably-java]
  # TODO (DF1b) realtimeRequestTimeout [ably-java]
  # TODO asyncHttpThreadpoolSize [ably-java]
  # TODO pushFullWait [ably-java]
  # TODO localStorage [ably-java]
  Options:
    .synopsis: |
      `ClientOptions` that only apply to Realtime clients.
    Automatic Connection:
      .specification: [RTC1b, RTN3, RTL4b1, TO3e]
      .synopsis: |
        `autoConnect`:
        Disable the automatic initiation of a connection when a client instance is instantiated.
    Channel Retry Timeout:
      .specification: [RTL13b, TO3l7]
      .synopsis: |
        `channelRetryTimeout`:
        Channel reattachement is attempted after this amount of time in the `SUSPENDED` connection state,
        following a server-initiated channel detach, if the connection state is `CONNECTED`.
    Connection Recovery String:
      .specification: [RTC1c, TO3i]
      .synopsis: |
        `recover`:
        Attempt to recover/inherit the state of a previous connection.
    Disconnected Retry Timeout:
      .specification: [TO3l1, RTN14d]
      .synopsis: |
        `disconnectedRetryTimeout`:
        Reconnection is attempted after this amount of time in the `DISCONNECTED` connection state.
    Host:
      .specification: [RTC1d, TO3k3]
      .synopsis: |
        `realtimeHost`:
        Override the Realtime endpoint, for development environments only.
    Message Echoes:
      .specification: [RTC1a, RTL7f, TO3h]
      .synopsis: |
        `echoMessages`:
        Suppress messages originating from this connection from being echoed back on the same connection.
    Message Queuing:
      .specification: [RTL6c2, RTP16, TO3g]
      .synopsis: |
        `queueMessages`:
        Suppress queuing of messages when connection state antipates imminent connection.
    Suspended Retry Timeout:
      .specification: [TO3l2, RTN14e]
      .synopsis: |
        `suspendedRetryTimeout`:
        Reconnection is attempted after this amount of time in the `SUSPENDED` connection state.
    Transport Parameters:
      .specification: RTC1f
      .synopsis: |
        `transportParams`:
        Sent in query string when initiating the Realtime connection.
REST:
  .synopsis: |
    Functionality offered by all Ably client instances (REST and Realtime).
  Authentication:
    .specification: RSC5
    Authorize:
      .specification: RSA10
    Create Token Request:
      .specification: RSA9
    Get Client Identifier:
      .specification: [RSA7, RSC17, RSA12]
    Request Token:
      .specification: RSA8e
  Channel:
    .specification: [RSN1, RTC3]
    Existence Check:
      .specification: [RSN2, RTS2]
      .synopsis: Discover if a channel exists with a given name.
    Get:
      .specification: [RSN3a, RTS3a]
      .synopsis: Get or create a channel instance with a given name.
    History:
      .documentation:
        - https://ably.com/docs/rest/history
        - https://ably.com/docs/core-features/history
      .specification: RSL2
    Iterate:
      .specification: [RSN2, RTS2]
      .synopsis: Enumerate local channel instances.
    Name:
      # to be formally specified: https://github.com/ably/docs/issues/1416
      .synopsis: Read-only property containing the channel name.
    Presence:
      .specification: [RSL3, RSP1, RSP2]
      History:
        .documentation: https://ably.com/docs/rest/presence#presence-history
        .specification: RSP4
      Member List:
        .documentation: https://ably.com/docs/rest/presence#member-list
        .specification: RSP3
    Release:
      .specification: [RSN4, RTS4]
      .synopsis: Free up resources consumed by a local channel instance.
  Options:
    .synopsis: |
      `ClientOptions` that only apply to REST clients.
    Fallback Retry Timeout:
      .specification: [TO3l10, RSC15f]
      .synopsis: |
        `fallbackRetryTimeout`
    Host:
      .specification: [RSC11, RSC12, RSC15b1, RSC15e, RSC15f, TO3k2]
      .synopsis: |
        `restHost`:
        Override the REST endpoint, for development environments only.
    HTTP Request Timeout:
      .specification: TO3l4
      .synopsis: |
        `httpRequestTimeout`
    Idempotent Publishing:
      .specification: [RSL1k, RTL6a1, TO3n]
      .synopsis: |
        `idempotentRestPublishing`:
        Overrides the client library default, from version 1.2 of the features specification,
        that makes REST publish operations idempotent.
    Maximum HTTP Retry Count:
      .specification: [TO3l5, RSC15a]
      .synopsis: |
        `httpMaxRetryCount`
    Maximum HTTP Retry Duration:
      .specification: TO3l6
      .synopsis: |
        `httpMaxRetryDuration`
    Request Identifiers:
      .specification: [RSC7c, TO3p]
      .synopsis: |
        `addRequestIds`:
        Adds a query string parameter, based on a source of randomnes, to all REST requests.
